$grid-columns: 12 !default;

.grid,
[class*="grid-auto-"] {
  display: grid;
  grid-gap: var(--grid-gap, 0);
}

.grid {
  --grid-cols: #{$grid-columns};
  grid-template-columns: repeat(var(--grid-cols), 1fr);

  > * {
    grid-column-end: span var(--grid-cols);
  }
}

.grid-auto-xs,
.grid-auto-sm,
.grid-auto-md,
.grid-auto-lg,
.grid-auto-xl {
  // auto-sized grid
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
}

.grid-auto-xs {
  --col-min-width: 8rem;
}
.grid-auto-sm {
  --col-min-width: 10rem;
}
.grid-auto-md {
  --col-min-width: 15rem;
}
.grid-auto-lg {
  --col-min-width: 20rem;
}
.grid-auto-xl {
  --col-min-width: 25rem;
}

.grid-auto-cols {
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}

// Grid Gap
@each $name, $size in $sizes {
  .grid-gap-#{$name} {
    --grid-gap: var(--space-#{$name}, #{$size});
  }
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    grid-column-end: span #{$i};
  }
  .col-start-#{$i} {
    grid-column-start: #{$i};
  }
  .col-end-#{$i + 1} {
    grid-column-end: #{$i + 1};
  }
}

.col-start {
  grid-column-start: 1;
}
.col-end {
  grid-column-end: -1;
}

@each $name, $size in $breakpoints {
  @include breakpoint(#{$name}) {
    .grid-auto-xs\@#{$name} {
      --col-min-width: 8rem;
    }
    .grid-auto-sm\@#{$name} {
      --col-min-width: 10rem;
    }
    .grid-auto-md\@#{$name} {
      --col-min-width: 15rem;
    }
    .grid-auto-lg\@#{$name} {
      --col-min-width: 20rem;
    }
    .grid-auto-xl\@#{$name} {
      --col-min-width: 25rem;
    }
    .grid-auto-cols\@#{$name} {
      grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    }
    .col-start-auto\@#{$name} {
      grid-column-start: auto;
    }
    .col-end-auto\@#{$name} {
      grid-column-end: auto;
    }

    @for $i from 1 through $grid-columns {
      .col-#{$i}\@#{$name} {
        grid-column-end: span #{$i};
      }
      .col-start-#{$i}\@#{$name} {
        grid-column-start: #{$i};
      }
      .col-end-#{$i + 1}\@#{$name} {
        grid-column-end: #{$i + 1};
      }
    }
  }
}
